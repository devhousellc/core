{"version":3,"file":"modal-stack.js","sourceRoot":"","sources":["../../src/modal/modal-stack.ts"],"names":[],"mappings":"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","sourcesContent":["import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Injectable,\r\n  Injector,\r\n  Inject,\r\n  ReflectiveInjector,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport {ContentRef} from '../util/popup';\r\nimport {isDefined, isString} from '../util/util';\r\n\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\r\n\r\n@Injectable()\r\nexport class NgbModalStack {\r\n  private _document: any;\r\n  private _windowAttributes = ['backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\r\n  private _backdropAttributes = ['backdropClass'];\r\n\r\n  constructor(\r\n      private _applicationRef: ApplicationRef, private _injector: Injector,\r\n      private _componentFactoryResolver: ComponentFactoryResolver, @Inject(DOCUMENT) document) {\r\n    this._document = document;\r\n  }\r\n\r\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\r\n    const containerEl =\r\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\r\n\r\n    if (!containerEl) {\r\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\r\n    }\r\n\r\n    const activeModal = new NgbActiveModal();\r\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\r\n\r\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\r\n        options.backdrop !== false ? this._attachBackdrop(containerEl) : null;\r\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(containerEl, contentRef);\r\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\r\n\r\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\r\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\r\n\r\n    this._applyWindowOptions(windowCmptRef.instance, options);\r\n\r\n    if (backdropCmptRef && backdropCmptRef.instance) {\r\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\r\n    }\r\n    return ngbModalRef;\r\n  }\r\n\r\n  private _attachBackdrop(containerEl: any): ComponentRef<NgbModalBackdrop> {\r\n    let backdropFactory: ComponentFactory<NgbModalBackdrop> =\r\n        this._componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\r\n    let backdropCmptRef = backdropFactory.create(this._injector);\r\n    this._applicationRef.attachView(backdropCmptRef.hostView);\r\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\r\n    return backdropCmptRef;\r\n  }\r\n\r\n  private _attachWindowComponent(containerEl: any, contentRef: any): ComponentRef<NgbModalWindow> {\r\n    let windowFactory = this._componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\r\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\r\n    this._applicationRef.attachView(windowCmptRef.hostView);\r\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\r\n    return windowCmptRef;\r\n  }\r\n\r\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\r\n    this._windowAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        windowInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\r\n    this._backdropAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        backdropInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getContentRef(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\r\n      context: NgbActiveModal): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      return this._createFromTemplateRef(content, context);\r\n    } else if (isString(content)) {\r\n      return this._createFromString(content);\r\n    } else {\r\n      return this._createFromComponent(moduleCFR, contentInjector, content, context);\r\n    }\r\n  }\r\n\r\n  private _createFromTemplateRef(content: TemplateRef<any>, context: NgbActiveModal): ContentRef {\r\n    const viewRef = content.createEmbeddedView(context);\r\n    this._applicationRef.attachView(viewRef);\r\n    return new ContentRef([viewRef.rootNodes], viewRef);\r\n  }\r\n\r\n  private _createFromString(content: string): ContentRef {\r\n    const component = this._document.createTextNode(`${content}`);\r\n    return new ContentRef([[component]]);\r\n  }\r\n\r\n  private _createFromComponent(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\r\n      context: NgbActiveModal): ContentRef {\r\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\r\n    const modalContentInjector =\r\n        ReflectiveInjector.resolveAndCreate([{provide: NgbActiveModal, useValue: context}], contentInjector);\r\n    const componentRef = contentCmptFactory.create(modalContentInjector);\r\n    this._applicationRef.attachView(componentRef.hostView);\r\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\r\n  }\r\n}\r\n"]}